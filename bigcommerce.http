closest I've gotten...

@STORE_HASH = 
@STORE_DOMAIN = 
@CLIENT_ID = 
@ACCESS_TOKEN = 
@CLIENT_SECRET = 
@STOREFRONT_API = Bearer
@GRAPHQL_QUERY = query paginateProducts { site { products (first: 3) { pageInfo { startCursor endCursor } edges { cursor node {  entityId name defaultImage { urlOriginal }}}}}}

###
POST https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/content/widget-templates
Host: api.bigcommerce.com
X-Auth-Token: {{ACCESS_TOKEN}}
X-Auth-Client: {{CLIENT_ID}}
Content-Type: application/json
Accept: application/json

{
  "name": "Header Images v6",
  "template": "{{#each images}}<a href='{{image_url}}'><img src={{image_source}} style='width:33.3%'/></a>{{/each}}", 
  "schema": [
    {
      "type": "tab",
      "label": "Design",
      "id": "ImageWidget",
      "sections": [
        {
          "type": "array",
          "label": "Images",
          "id": "images",
          "defaultCount": 3,
          "settings": [
            {
              "type": "imageManager",
              "thumbnail": "imageUrl",
              "label": "image",
              "id": "imageUrl",
              "default": {
                "image_url": "https://images.unsplash.com/photo-1487700160041-babef9c3cb55?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2000&q=80",
                "image_source": "https://images.unsplash.com/photo-1487700160041-babef9c3cb55?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2000&q=80",
                "type": "IMAGE_MANAGER"
              }
            }
          ]
        }
      ]
    }
  ]
}

# stopped here while trying to feed from graphql
###
#Create a widget.
POST https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/content/widgets
Host: api.bigcommerce.com
Authorization: {{STOREFRONT_API}}
X-Auth-Token: {{ACCESS_TOKEN}}
X-Auth-Client: {{CLIENT_ID}}
Content-Type: application/json
Accept: application/json

{
  "name": "Bannerv6",
  "storefront_api_query": "{{GRAPHQL_QUERY}}",
  "widget_configuration": {
    "images": [
      {
        "image_source": "https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/91/309/thekinfolktablecover_1024x1024__80715.1456436719.jpg?c=2&imbypass=on"
      },
      {
        "image_source": "https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on"
      },
      {
        "image_source": "https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2&imbypass=on"
      }
    ]
  },
  "widget_template_uuid": "003c3317-a65d-469d-82d3-88ade8b54726"
}


###
#Create a placement for widget, place widget uuid into body of this request.
POST https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/content/placements
Host: api.bigcommerce.com
X-Auth-Token: {{ACCESS_TOKEN}}
X-Auth-Client: {{CLIENT_ID}}
Content-Type: application/json
Accept: application/json

{
  "widget_uuid": "d66f9f3c-650b-410a-a20a-e36e8425b8d9",
  "sort_order": 1,
  "region": "header_bottom--global",
  "template_file": "pages/home",
  "status": "active"
}



###
#Get graphQL token
POST https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/storefront/api-token
X-Auth-Token: {{ACCESS_TOKEN}}
X-Auth-Client: {{CLIENT_ID}}
Content-Type: application/json
Accept: application/json

{
  "channel_id": 1,
  "expires_at": 1802288000,
  "allowed_cors_origins": [
    "{{STORE_DOMAIN}}"
  ]
}


# graphql to get 3 prds with images
###
POST https://store-{{STORE_HASH}}.mybigcommerce.com/graphql
Authorization: {{STOREFRONT_API}}
Content-Type: application/json

{
  "query": "query paginateProducts {\n site {\n products (first: 3) {\n pageInfo {\n startCursor\n endCursor\n }\n edges {\n cursor\n node {\n  entityId\n name\n defaultImage\n {\n urlOriginal }\n}\n}\n}\n}\n}"
}

# gets images for a product
@PRODUCT_ID = 77
###
GET https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/catalog/products/{{PRODUCT_ID}}/images
Authorization: {{STOREFRONT_API}}
X-Auth-Token: {{ACCESS_TOKEN}}
X-Auth-Client: {{CLIENT_ID}}
Content-Type: application/json
Accept: application/json